/* html  {
  width: 100%;
  height: 100%;
  margin: 0px;
  padding: 0px;
  overflow-x: hidden; 
} 
This was a solution to a white space that was created at the right of my website,
but it was created by not adding a separate div for the row; fixed;
*/

/* HTML selectors  */

body {
  font-family: "Montserrat";
  text-align: center;
}

h1, h2, h3, h4, h5, h6{
  font-weight: bold;
}

p{
  color: #8f8f8f;
}

.container-fluid {
  padding: 7% 15%;
}

.colored-section{
  background-color: #ff4c68;
  color: #fff;
}

.white-section{
  background-color: #fff;
}

/* Headings */

.big-heading{
  font-weight: 900;
  font-size: 3.5rem;
  line-height: 1.5;
}

/* Navigation Bar  */

.navbar {
  padding-bottom: 4.5rem;
}

.navbar-brand {
  font-size: 2.5rem;
  font-family: Ubuntu;
  font-weight: bold;
}

.list-item {
  padding: 0 18px;
}

.nav-link {
  font-size: 1.2rem;
  font-family: "Montserrat";
}

/* Title section */

#title .container-fluid{
  padding: 3% 15% 7%;
  text-align: left;
}

/* This only affects the container-fluid in that 
specific section, the container is the child and the id is 
the parent, this is hierarchial combining of selectors 
THE SPACE BETWEEN IS CRUCIAL*/

.download-button {
  margin: 5% 3% 5% 0;
}

.title-img {
  width: 20%;
  transform: rotate(25deg);
  position: absolute;
  margin-left: 50px;
}

/* When our viewport is 1020 or smaller:*/

@media screen and (max-width: 1020px) {
  .title-img-div,
  .title-text-div {
    width: 100% !important;
  }

  /* This new width and classes overwrite the bootstrap grid, 
  allowing the picture to take up it's own row at tablet;  */

  #title{
    text-align: center;
  }

  .title-img {
    width: 40% !important;
    position: static !important;
    transform: rotate(0) !important;
    margin-left: 0 !important;
  }

  h1 {
    font-size: 2.5rem;
  }
}

/* Features Section*/

#features {
  position: relative;
  /* z-index: 1; We don't need this, 
  if both elements are positioned, the one 
  below the other in the html will stack on top */
}

.feature-title {
  font-size: 1.5rem;
}

.features-desc {
  color: #8f8f8f;
}

.features-icons {
  color: #ef8172;
  padding-bottom: 1.5rem;
  /* font-size: 2rem; - Font-Awesome class fa-3x fa-5x fa-7x
  changes the size automatically so u don't have to do this */
}

.features-icons:hover {
  color: #ff4c68;
}

.features-box {
  line-height: 2rem;
  margin-bottom: 1rem;
  padding: 5%;
}

/* Testimonials section */

#testimonials {
  background-color: #ef8172;
}

.testimonial-image {
  border-radius: 50%;
  width: 10%;
  margin: 20px;
}

.testimonials-text {
  font-size: 3rem;
  line-height: 1.5;
}

#press {
  background-color: #ef8172;
  padding-bottom: 3%;
}

.press-img {
  width: 15%;
  margin: 20px 20px 50px;
}

/* The padding is added only to the item, so it doesn't
affect the buttons - this padding was deleted and we just
added the class containter-fluid to the item html 

.carousel-item {
  padding: 7% 15%;
} 

/* Pricing section */

#pricing {
  padding: 100px;
}

.pricing-heading, .price {
  font-size: 3rem;
  line-height: 1.5;
}

.price-col {
  padding: 3% 2%;
}

.card-body {
  display: flex !important;
  flex-direction: column !important;
}

.card .btn {
  margin-top: auto !important;
}

/* The !important element is used to overwrite all other elements in the 
  css, so only this property will be implemented.  */

/* Footer section */

.footer-icon{
  margin:2%;
}